trigger:
  branches:
    include:
      - master
      - release/**
      - feature/**

variables:
  DEPLOYMENT_NAME: $(Build.BuildId)
  LOCATION: EastUS
  RESOURCE_GROUP: "OmarLucia-RG"
  RESOURCES_NAMES: "omarlucia"
  STORAGE_ACCOUNT_NAME: "OmarLucia-RG"
  BRANCH_NAME: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]

stages:
  - stage: Deploy
    displayName: Deploy ARM Templates and Configure Secrets
    jobs:
      - job: DeployResources
        displayName: Deploy Resources to Azure
        pool:
          vmImage: ubuntu-latest
        steps:
          # 1. Determine the environment based on branch
          - script: |
              # Set environment based on the branch name
              if [[ $(BRANCH_NAME) == "master" ]]; then
                echo "##vso[task.setvariable variable=ENVIRONMENT]prd"
              elif [[ $(BRANCH_NAME) == release/* ]]; then
                echo "##vso[task.setvariable variable=ENVIRONMENT]test"
              elif [[ $(BRANCH_NAME) == feature/* ]]; then
                echo "##vso[task.setvariable variable=ENVIRONMENT]dev"
              else
                echo "Unknown branch: $(BRANCH_NAME)"
                exit 1
              fi
              echo "Deploying to environment: $ENVIRONMENT"
            displayName: Determine Environment
          - script: echo "Deploying to $(ENVIRONMENT) environment"
            displayName: Show Environment

          # # 2. Deploy Storage Account ARM Template
          # - task: AzureCLI@2
          #   displayName: Deploy Storage Account ARM Template
          #   inputs:
          #     azureSubscription: "Arroyo_Challenge-Test_Omar"
          #     scriptType: bash
          #     scriptLocation: inlineScript
          #     inlineScript: |
          #       az deployment group create \
          #         --name $(DEPLOYMENT_NAME) \
          #         --resource-group $(RESOURCE_GROUP) \
          #         --template-file ARM_Templates/StorageAccount.json \
          #         --parameters environment="$ENVIRONMENT" location="$LOCATION" storageAccountName=sa$(RESOURCES_NAMES)

          # # 3. Deploy Key Vault ARM Template
          # - task: AzureCLI@2
          #   displayName: Deploy Key Vault ARM Template
          #   inputs:
          #     azureSubscription: "Arroyo_Challenge-Test_Omar"
          #     scriptType: bash
          #     scriptLocation: inlineScript
          #     inlineScript: |
          #       az deployment group create \
          #         --name $(DEPLOYMENT_NAME) \
          #         --resource-group $(RESOURCE_GROUP) \
          #         --template-file ARM_Templates/KeyVault.json \
          #         --parameters environment="$ENVIRONMENT" location="$LOCATION" keyVaultName="kv$(RESOURCES_NAMES)" sku="Standard"

          # 4. Get Connection String
          - task: AzureCLI@2
            displayName: Get Storage Account Connection String
            inputs:
              azureSubscription: "Arroyo_Challenge-Test_Omar"
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                bash $(System.DefaultWorkingDirectory)/Scripts/getSAConnectionString.sh "sa$(RESOURCES_NAMES)$(ENVIRONMENT)"
                echo $CONNECTION_STRING
                echo "##vso[task.setvariable variable=CONNECTION_STRING;]$CONNECTION_STRING"

          # 5. Create Secret if not exist
          - task: AzureCLI@2
            displayName: Store Connection String in Key Vault
            inputs:
              azureSubscription: "Arroyo_Challenge-Test_Omar"
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                bash $(System.DefaultWorkingDirectory)/Scripts/createSecret.sh "kv$(RESOURCES_NAMES)-$(ENVIRONMENT) sa-$(RESOURCES_NAMES)-secret-$(ENVIRONMENT) $(CONNECTION_STRING)"